load ("expressions_from_xml.mac");
load ("parse_token_list.lisp");

from_wxmx (filename) :=
    block ([parse_tree, expr_verbatim, expr_mogrified],
           parse_tree: parse_xml (?pathname (filename)),
           expr_verbatim: expressions_from_xml (parse_tree),
           expr_mogrified: apply1 (expr_verbatim, rule_split_mth),
           [parse_tree, expr_verbatim, expr_mogrified]);

matchdeclare (mm, lambda ([e%], op1(e%) = 'mth));
op1(e%) := if not atom(e%) then if not atom(op(e%)) then op1(op(e%)) else op(e%);

defrule (rule_split_mth, output () (mm), apply (output (), split_mth (mm)));

extract_ops (e, op1) :=
    block ([L: []],
           scanmap (lambda ([e1], if not atom(e1) and op(e1) = op1 then push (e1, L), e1), e),
           reverse (L));

/* MIGHT BE UNNEEDED !!
extract_outputs (e) :=
    block ([L: [], f],
           f: lambda ([e], if not atom(e) and not atom(op(e)) and op(op(e)) = 'output then push (e, L), e),
           scanmap (f, e),
           reverse (L));
 */
